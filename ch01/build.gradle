group 'com.goldhome.demo.javagradleweb'
version '1.0-SNAPSHOT'

apply plugin: 'war'
apply plugin:"jetty"

sourceCompatibility = 1.7

ext {
    jstlVersion = "1.2"
    fileuploadVersion="1.3.2"
    slf4jVersion="1.7.8"
    mysqlVersion="5.1.25"
    fckeditorVersion="2.4.1"
    junitVresion="4.12"
    servletVersion="2.5"
    jspVersion="2.2"
}

repositories {
    mavenLocal()
}

[compileJava,compileTestJava,javadoc]*.options*.encoding = "UTF-8"

dependencies {
    compile "jstl:jstl:$jstlVersion"
    compile "commons-fileupload:commons-fileupload:$fileuploadVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "mysql:mysql-connector-java:$mysqlVersion"
    compile "net.fckeditor:java-core:$fckeditorVersion"
    testCompile "junit:junit:$junitVresion"
    providedCompile  "javax.servlet:servlet-api:$servletVersion"
    providedCompile "javax.servlet.jsp:jsp-api:$jspVersion"
}

/*将src/main/java编译的class打包成${project.name}-${version}.jar放入到build/libs目录下,配置文件没必要打包*/
task jarWithoutResources(type: Jar) {
    baseName project.name
    from("$buildDir/classes/main")
}

/*1.将$projectDir/resources下的配置文件(生产上的配置文件)拷贝到WEB-INF/classes目录,不打包是为了方便修改配置*/
/*2.将sourceSet.main下面编译的文件和资源文件剔除:*/
//classpath=classpath - files("$buildDir/classes/main")
//classpath=classpath - files("$buildDir/resources/main")
/*3.将前一步打包的jar文件放入WEB-INF/lib目录下*/
war{
    dependsOn jarWithoutResources
    from("$projectDir/src/main/servRes") {
        include "*.properties"
        into("WEB-INF/classes")
    }
    classpath=classpath - sourceSets.main.output
    classpath fileTree(dir:libsDir, include:"${project.name}-${version}.jar")
}

jettyRun{
    webAppSourceDirectory file("$projectDir/src/main/webapp")
    httpPort 8080
    contextPath project.name
    scanIntervalSeconds 0
    reload "automatic"
}